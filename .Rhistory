install.packages("dplyr")
install.packages("knitr")
install.packages("dplyr")
install.packages("knitr")
install.packages("curl")
library("dplyr")
---
title: "index"
output: html_document
---
```{r,message = FALSE,echo = FALSE}
#install.packages("jsonlite")
#install.packages("dplyr")
#install.packages("knitr")
#install.packages("curl")
library(jsonlite)
library(dplyr)
library(knitr)
#Main GitHub Query
gitHub_organization <- "INFO-498F"
gitHub_user <- "JoshiAbhishek"
access_token <- "3154600495ee2180b08bf9147a6a06fa2f238b6d"
request_url <- paste("https://api.github.com/users/", gitHub_user, "?access_token=", access_token)
gitHub_user_data <- fromJSON(request_url)
#GitHub Repos Query
repos_gitHub_url <- gitHub_user_data$repos_url
repos_request_url <- paste(repos_gitHub_url, "?access_token=", access_token, "&sort=created&order=desc&per_page=100")
repo_data <- fromJSON(repos_request_url)
repo_data_flattened <- flatten(repo_data)
num_repos <- nrow(repo_data)
most_popular <- repo_data %>% filter(forks_count == max(forks_count)) %>% select(name)
```
User, `r gitHub_user`, from, `r gitHub_organization` has `r num_repos` number of repositories, where `r most_popular` is the most forked.
![User Image](`r gitHub_user_data$avatar_url`)
```{r,message = FALSE,echo = FALSE}
formatted_repos_data <- repo_data_flattened %>% mutate(created_date = format(as.Date(repo_data_flattened$created_at), format = "%b %d %Y"))
narrowed_repos_data <- formatted_repos_data %>% select(id, name, forks_count, created_date)
colnames(narrowed_repos_data) <- gsub("_", " ", colnames(narrowed_repos_data))
```
Here is a table showing ID, name, fork count, and date created values for repositories of `r gitHub_user`.
`r kable(narrowed_repos_data)`
```{r,message = FALSE,echo = FALSE}
summary_table_info <- repo_data_flattened %>% group_by(language) %>% summarise(number_of_repos = n(), average_forks = mean(forks_count))
```
This is a summary table with the number of repositories and average number of forks for repositories, by language.
`r kable(summary_table_info)`
#install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("dplyr")
return (ret)
library("dyplr")
info_function <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_use", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
return (ret)
}
install.packages("dyplr")
library("dyplr")
info_function <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_use", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
return (ret)
}
library(dplyr)
info_function <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_use", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
return (ret)
}
library(dplyr)
info_function <- function(dataset) {
dataset <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_familiarity", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
#Number of people per class standing
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
ret$num_of_sophomores <- dataset_formatted %>% filter(class_standing == "Sophomore") %>% nrow()
ret$num_of_junior <- dataset_formatted %>% filter(class_standing == "Junior") %>% nrow()
ret$num_of_senior <- dataset_formatted %>% filter(class_standing == "Senior") %>% nrow()
#Number of people applying to the major
ret$num_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Yes") %>% nrow()
ret$num_not_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "No") %>% nrow()
ret$num_maybe_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Maybe") %>% nrow()
#Number of people per operating system
ret$num_mac_users <- dataset_formatted %>% filter(operating_system == "Mac") %>% nrow()
ret$num_windows_users <- dataset_formatted %>% filter(operating_system == "Windows") %>% nrow()
#Number of people with command-line familiarity
ret$num_not_command-line_familiar <- dataset_formatted %>% filter(command-line_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_command-line_user <- dataset_formatted %>% filter(command-line_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_command-line_git <- dataset_formatted %>% filter(command-line_familiarity == "Have used it a few times") %>% nrow()
#Number of people with git familiarity
ret$num_not_git_familiar <- dataset_formatted %>% filter(git_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_git_user <- dataset_formatted %>% filter(git_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_git_familiarity <- dataset_formatted %>% filter(git_familiarity == "Have used it a few times") %>% nrow()
#Number of people with markdown familiarity
ret$num_not_markdown_familiar <- dataset_formatted %>% filter(markdown_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_markdown_user <- dataset_formatted %>% filter(markdown_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_markdown_familiarity <- dataset_formatted %>% filter(markdown_familiarity == "Have used it a few times") %>% nrow()
#Number of people with r familiarity
ret$num_not_r_familiar <- dataset_formatted %>% filter(r_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_r_user <- dataset_formatted %>% filter(r_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_r_familiarity <- dataset_formatted %>% filter(r_familiarity == "Have used it a few times") %>% nrow()
#Number of people with programming familiarity
ret$num_no_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Never written code") %>% nrow()
ret$num_some_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Experimented a bit with simple programming") %>% nrow()
ret$num_moderate_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Moderate experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
ret$num_high_programmig_exp <- dataset_formatted %>% filter(programming_familiarity == "Lots of experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
#Average number of countries visited
ret$mean_countries_visited <- dataset_formatted %>% select(countries_visited) %>% mean()
#Number of dog / cat people
ret$num_dog_person <- dataset_formatted %>% filter(pet_person == "A dog person.") %>% nrow()
ret$num_cat_person <- dataset_formatted %>% filter(pet_person == "A cat person.") %>% nrow()
ret$num_both_pets_person <- dataset_formatted %>% filter(pet_person == "Both!") %>% nrow()
ret$num_not_pet_person <- dataset_formatted %>% filter(pet_person == "Neither") %>% nrow()
#Number of seahawks fans
ret$num_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "Yes") %>% nrow()
ret$num_major_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "YES!") %>% nrow()
ret$num_not_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "No") %>% nrow()
return (ret)
}
```{r, echo=FALSE, results='hide', message=FALSE}
# Load packages
library(dplyr)
library(plotly)
# Read in class survey data
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
# Retrieve functions from `summary-information.r`
source("scripts/Summary-Information.r")
info_function(dataset = data)
```
```{r, echo=FALSE, results='hide', message=FALSE}
source("scripts/chartfile1.r")
chart1 <- make_INFOinterest_chart(data)
```
`r chart1`
```{r, echo=FALSE, results='hide', message=FALSE}
```
library(dplyr)
info_function <- function(dataset) {
#dataset <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_familiarity", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
#Number of people per class standing
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
ret$num_of_sophomores <- dataset_formatted %>% filter(class_standing == "Sophomore") %>% nrow()
ret$num_of_junior <- dataset_formatted %>% filter(class_standing == "Junior") %>% nrow()
ret$num_of_senior <- dataset_formatted %>% filter(class_standing == "Senior") %>% nrow()
#Number of people applying to the major
ret$num_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Yes") %>% nrow()
ret$num_not_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "No") %>% nrow()
ret$num_maybe_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Maybe") %>% nrow()
#Number of people per operating system
ret$num_mac_users <- dataset_formatted %>% filter(operating_system == "Mac") %>% nrow()
ret$num_windows_users <- dataset_formatted %>% filter(operating_system == "Windows") %>% nrow()
#Number of people with command-line familiarity
ret$num_not_command-line_familiar <- dataset_formatted %>% filter(command-line_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_command-line_user <- dataset_formatted %>% filter(command-line_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_command-line_git <- dataset_formatted %>% filter(command-line_familiarity == "Have used it a few times") %>% nrow()
#Number of people with git familiarity
ret$num_not_git_familiar <- dataset_formatted %>% filter(git_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_git_user <- dataset_formatted %>% filter(git_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_git_familiarity <- dataset_formatted %>% filter(git_familiarity == "Have used it a few times") %>% nrow()
#Number of people with markdown familiarity
ret$num_not_markdown_familiar <- dataset_formatted %>% filter(markdown_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_markdown_user <- dataset_formatted %>% filter(markdown_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_markdown_familiarity <- dataset_formatted %>% filter(markdown_familiarity == "Have used it a few times") %>% nrow()
#Number of people with r familiarity
ret$num_not_r_familiar <- dataset_formatted %>% filter(r_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_r_user <- dataset_formatted %>% filter(r_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_r_familiarity <- dataset_formatted %>% filter(r_familiarity == "Have used it a few times") %>% nrow()
#Number of people with programming familiarity
ret$num_no_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Never written code") %>% nrow()
ret$num_some_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Experimented a bit with simple programming") %>% nrow()
ret$num_moderate_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Moderate experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
ret$num_high_programmig_exp <- dataset_formatted %>% filter(programming_familiarity == "Lots of experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
#Average number of countries visited
ret$mean_countries_visited <- dataset_formatted %>% select(countries_visited) %>% mean()
#Number of dog / cat people
ret$num_dog_person <- dataset_formatted %>% filter(pet_person == "A dog person.") %>% nrow()
ret$num_cat_person <- dataset_formatted %>% filter(pet_person == "A cat person.") %>% nrow()
ret$num_both_pets_person <- dataset_formatted %>% filter(pet_person == "Both!") %>% nrow()
ret$num_not_pet_person <- dataset_formatted %>% filter(pet_person == "Neither") %>% nrow()
#Number of seahawks fans
ret$num_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "Yes") %>% nrow()
ret$num_major_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "YES!") %>% nrow()
ret$num_not_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "No") %>% nrow()
print(ret$num_of_freshman)
return (ret)
}
View(info_function)
library(dplyr)
info_function <- function(dataset) {
#dataset <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
ret <- list()
ret$length <- length(dataset)
dataset_formatted <- gsub(" ", "_", colnames(dataset))
colnames(dataset_formatted) <- c("class_standing", "applying_to_major", "operating_system", "command-line_familiarity", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
#Number of people per class standing
ret$num_of_freshman <- dataset_formatted %>% filter(class_standing == "Freshman") %>% nrow()
ret$num_of_sophomores <- dataset_formatted %>% filter(class_standing == "Sophomore") %>% nrow()
ret$num_of_junior <- dataset_formatted %>% filter(class_standing == "Junior") %>% nrow()
ret$num_of_senior <- dataset_formatted %>% filter(class_standing == "Senior") %>% nrow()
#Number of people applying to the major
ret$num_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Yes") %>% nrow()
ret$num_not_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "No") %>% nrow()
ret$num_maybe_applying_to_major <- dataset_formatted %>% filter(applying_to_major == "Maybe") %>% nrow()
#Number of people per operating system
ret$num_mac_users <- dataset_formatted %>% filter(operating_system == "Mac") %>% nrow()
ret$num_windows_users <- dataset_formatted %>% filter(operating_system == "Windows") %>% nrow()
#Number of people with command-line familiarity
ret$num_not_command-line_familiar <- dataset_formatted %>% filter(command-line_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_command-line_user <- dataset_formatted %>% filter(command-line_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_command-line_git <- dataset_formatted %>% filter(command-line_familiarity == "Have used it a few times") %>% nrow()
#Number of people with git familiarity
ret$num_not_git_familiar <- dataset_formatted %>% filter(git_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_git_user <- dataset_formatted %>% filter(git_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_git_familiarity <- dataset_formatted %>% filter(git_familiarity == "Have used it a few times") %>% nrow()
#Number of people with markdown familiarity
ret$num_not_markdown_familiar <- dataset_formatted %>% filter(markdown_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_markdown_user <- dataset_formatted %>% filter(markdown_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_markdown_familiarity <- dataset_formatted %>% filter(markdown_familiarity == "Have used it a few times") %>% nrow()
#Number of people with r familiarity
ret$num_not_r_familiar <- dataset_formatted %>% filter(r_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_r_user <- dataset_formatted %>% filter(r_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_r_familiarity <- dataset_formatted %>% filter(r_familiarity == "Have used it a few times") %>% nrow()
#Number of people with programming familiarity
ret$num_no_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Never written code") %>% nrow()
ret$num_some_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Experimented a bit with simple programming") %>% nrow()
ret$num_moderate_programming_exp <- dataset_formatted %>% filter(programming_familiarity == "Moderate experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
ret$num_high_programmig_exp <- dataset_formatted %>% filter(programming_familiarity == "Lots of experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
#Average number of countries visited
ret$mean_countries_visited <- dataset_formatted %>% select(countries_visited) %>% mean()
#Number of dog / cat people
ret$num_dog_person <- dataset_formatted %>% filter(pet_person == "A dog person.") %>% nrow()
ret$num_cat_person <- dataset_formatted %>% filter(pet_person == "A cat person.") %>% nrow()
ret$num_both_pets_person <- dataset_formatted %>% filter(pet_person == "Both!") %>% nrow()
ret$num_not_pet_person <- dataset_formatted %>% filter(pet_person == "Neither") %>% nrow()
#Number of seahawks fans
ret$num_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "Yes") %>% nrow()
ret$num_major_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "YES!") %>% nrow()
ret$num_not_seahawks_fan <- dataset_formatted %>% filter(seahawks_fan == "No") %>% nrow()
cat(ret$num_of_freshman)
return (ret)
}
cat(ret$num_of_freshman)
print(ret$num_of_freshman)
print(ret$num_of_freshman)
print(ret$num_of_freshman)
print(ret$num_of_freshman)
library(dplyr)
info_function <- function(dataset) {
ret <- list()
ret$length <- length(dataset)
names(dataset) <- gsub(".", " ", colnames(data))
colnames(dataset) <- c("class_standing", "applying_to_major", "operating_system", "command_line_familiarity", "git_familiarity", "markdown_familiarity", "r_familiarity", "programming_experience", "countries_visited", "pet_person", "seahawks_fan")
#Number of people per class standing
ret$num_of_freshman <- dataset %>% filter(class_standing == "Freshman") %>% nrow()
ret$num_of_sophomores <- dataset %>% filter(class_standing == "Sophomore") %>% nrow()
ret$num_of_junior <- dataset %>% filter(class_standing == "Junior") %>% nrow()
ret$num_of_senior <- dataset %>% filter(class_standing == "Senior") %>% nrow()
#Number of people applying to the major
ret$num_applying_to_major <- dataset %>% filter(applying_to_major == "Yes") %>% nrow()
ret$num_not_applying_to_major <- dataset %>% filter(applying_to_major == "No") %>% nrow()
ret$num_maybe_applying_to_major <- dataset %>% filter(applying_to_major == "Maybe") %>% nrow()
#Number of people per operating system
ret$num_mac_users <- dataset %>% filter(operating_system == "Mac") %>% nrow()
ret$num_windows_users <- dataset %>% filter(operating_system == "Windows") %>% nrow()
#Number of people with command-line familiarity
ret$num_not_command_line_familiar <- dataset %>% filter(command_line_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_command_line_user <- dataset %>% filter(command_line_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_command_line_git <- dataset %>% filter(command_line_familiarity == "Have used it a few times") %>% nrow()
#Number of people with git familiarity
ret$num_not_git_familiar <- dataset %>% filter(git_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_git_user <- dataset %>% filter(git_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_git_familiarity <- dataset %>% filter(git_familiarity == "Have used it a few times") %>% nrow()
#Number of people with markdown familiarity
ret$num_not_markdown_familiar <- dataset %>% filter(markdown_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_markdown_user <- dataset %>% filter(markdown_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_markdown_familiarity <- dataset %>% filter(markdown_familiarity == "Have used it a few times") %>% nrow()
#Number of people with r familiarity
ret$num_not_r_familiar <- dataset %>% filter(r_familiarity == "Never used it") %>% nrow()
ret$num_intermediate_r_user <- dataset %>% filter(r_familiarity == "Intermediate user") %>% nrow()
ret$num_slight_r_familiarity <- dataset %>% filter(r_familiarity == "Have used it a few times") %>% nrow()
#Number of people with programming familiarity
ret$num_no_programming_exp <- dataset %>% filter(programming_experience == "Never written code") %>% nrow()
ret$num_some_programming_exp <- dataset %>% filter(programming_experience == "Experimented a bit with simple programming") %>% nrow()
ret$num_moderate_programming_exp <- dataset %>% filter(programming_experience == "Moderate experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
ret$num_high_programmig_exp <- dataset %>% filter(programming_experience == "Lots of experience with a scripting language (Python, R, JavaScript, Java, etc.)") %>% nrow()
#Total number of countries visited
ret$total_countries_visited <- dataset %>% select(countries_visited) %>% nrow()
#Number of dog / cat people
ret$num_dog_person <- dataset %>% filter(pet_person == "A dog person...") %>% nrow()
ret$num_cat_person <- dataset %>% filter(pet_person == "A cat person....") %>% nrow()
ret$num_both_pets_person <- dataset %>% filter(pet_person == "Both!") %>% nrow()
ret$num_not_pet_person <- dataset %>% filter(pet_person == "Neither") %>% nrow()
#Number of seahawks fans
ret$num_seahawks_fan <- dataset %>% filter(seahawks_fan == "Yes") %>% nrow()
ret$num_major_seahawks_fan <- dataset %>% filter(seahawks_fan == "YES!") %>% nrow()
ret$num_not_seahawks_fan <- dataset %>% filter(seahawks_fan == "No") %>% nrow()
return(ret)
}
```{r, echo=FALSE, results='hide', message=FALSE}
# Assignment 7 - Collaborative Coding with class survey dataset
# Load packages
library(dplyr)
library(plotly)
library(knitr)
# Read in class survey data
data <- read.csv("https://raw.githubusercontent.com/INFO-498F/a7-survey-data/master/intro_survey_data.csv")
# Retrieve functions from `summary-information.R`
source("scripts/summary-information.R")
summaryList <- info_function(data)
```
```{r, echo=FALSE, results='hide', message=FALSE}
# Retrieve function from `chartfile1.R`
source("scripts/chartfile1.R")
chart1 <- make_INFOinterest_chart(data)
```
`r chart1`
```{r, echo=FALSE, results='hide', message=FALSE}
# Retrieve function from 'chartfile2.R'
source("scripts/chartfile2.r")
chart2 <- make_bar_chart(data)
```
`r chart2`
summaryList <- info_function(data)
summaryList <- info_function(data)
print(summaryList$num_of_freshman);
print(summaryList$length)
library(dplyr)
analysis <- function(dataset) {
dataset <- read.csv("../data/Age-adjusted_Death_Rates_for_the_Top_10_Leading_Causes_of_Death__United_States__2013.csv")
unique_causes_of_death <- dataset %>% select(unique(CAUSE_NAME))
print(unique_causes_of_death)
}
print(unique_causes_of_death)
print(unique_causes_of_death)
dataset <- read.csv("../data/Age-adjusted_Death_Rates_for_the_Top_10_Leading_Causes_of_Death__United_States__2013.csv")
dataset <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/AJ/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
dataset <- read.csv("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
library(dplyr)
setwd("C:/Abhishek/Documents/GitHub/final-project-INFO498F")
dataset <- read.csv("data/Top_Ten_US_Causes_Of_Death.csv")
install.packages(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
analysis <- function(dataset) {
setwd("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data")
dataset <- read.csv("Top_Ten_US_Causes_Of_Death.csv")
unique_causes_of_death <- dataset %>% select(CAUSE_NAME)
print(unique_causes_of_death)
}
install.packages("dplyr")
setwd("C:/Abhishek/Documents/GitHub/final-project-INFO498F/data")
dataset <- read.csv("Top_Ten_US_Causes_Of_Death.csv")
unique_causes_of_death <- dataset %>% select(CAUSE_NAME)
print(unique_causes_of_death)
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('C:/Users/Abhishek/Desktop/test-shiny')
install.packages("dplyr")
library("dplyr")
analysis <- function(dataset) {
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
#Gets Causes of Death
unique_causes_of_death <- data %>% distinct(CAUSE_NAME) %>% select(CAUSE_NAME)
print(unique_causes_of_death)
#Questions:
#What have been the leading causes of death in order from 1999 to 2013?
death_causes <- data %>% group_by(YEAR) %>% group_by(CAUSE_NAME) %>% summarise_each(funs(sum)) %>% select(DEATHS)
#What causes of death have grown the most in the past 14 years from 1999 to 2013?
#What causes of death have declined the most in the past 14 years from 1999 to 2013?
#What is the proportional relation between causes of death most recently? How has it changed in the past 14 years from 1999 to 2013?
}
death_causes <- data %>% group_by(YEAR) %>% group_by(CAUSE_NAME) %>% summarise_each(funs(sum)) %>% select(DEATHS)
death_causes <- data %>% group_by(YEAR) %>% group_by(CAUSE_NAME) %>% select(DEATHS)
death_causes <- data %>% group_by(YEAR) %>% summarise(CAUSE_NAME, SUM_DEATHS = sum(DEATHS))
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
data <- read.csv("../data/Top_Ten_US_Causes_Of_Death.csv")
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
shiny::runApp('GitHub/Shiny-Web-App')
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='joshi',
token='15CAF7433A3A737C2A305C360F8EB5C1',
secret='<SECRET>')
rsconnect::setAccountInfo(name='joshi', token='15CAF7433A3A737C2A305C360F8EB5C1', secret='wsIEFCC7rQ9i9jf5AFnx3DInK5cnfVfVlfJ8Zqnq')
library(rsconnect)
rsconnect::deployApp('C:/Users/Abhishek/Documents/GitHub/Shiny-Web-App/')
shiny::runApp('GitHub/Shiny-Web-App')
library("dplyr")
data <- read.csv("C:/Users/Abhishek/Documents/GitHub/final-project-INFO498F/data/Top_Ten_US_Causes_Of_Death.csv")
data[,5] <- as.numeric(as.character(data[,5]))
deaths_filtered <- data %>% filter(STATE == 'United States') %>% select(YEAR, CAUSE_NAME, DEATHS) %>% filter(CAUSE_NAME != 'All Causes')
print(deaths_filtered)
deaths_filtered_year <- deaths_filtered %>% filter(YEAR == '1999' & YEAR == '2013')
print(deaths_filtered_year)
deaths_filtered_year <- deaths_filtered %>% filter(YEAR == '1999' & YEAR == '2013') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_filtered_year)
deaths_filtered_year <- deaths_filtered %>% filter(YEAR == '1999' | YEAR == '2013') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_filtered_year)
deaths_filtered_year_grouped <- deaths_filtered_year %>% group_by(CAUSE_NAME)
print(deaths_filtered_year_grouped)
deaths_1999 <- deaths_filtered %>% filter(YEAR == '1999') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_1999)
deaths_2013 <- deaths_filtered %>% filter(YEAR == '2013') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_2013)
deaths_merged <- merge(deaths_1999, deaths_2013, by = "CAUSE_NAME") %>% mutate(deaths_merged, Year_Diff = deaths_2013$DEATHS - deaths_1999$DEATHS)
print(deaths_merged)
deaths_merged <- merge(deaths_1999, deaths_2013, by = "CAUSE_NAME") #%>% mutate(deaths_merged, Year_Diff = deaths_2013$DEATHS - deaths_1999$DEATHS)
print(deaths_merged)
deaths_merged <- merge(deaths_1999, deaths_2013, by = NULL) #%>% mutate(deaths_merged, Year_Diff = deaths_2013$DEATHS - deaths_1999$DEATHS)
print(deaths_merged)
deaths_filtered_1999_2013 <- deaths_filtered %>% filter(YEAR == '1999' | YEAR == '2013')
print(deaths_filtered_1999_2013)
deaths_2013 <- mutate(deaths_2013, Diff = deaths_2013$DEATHS - deaths_1999$DEATHS)
print(deaths_2013)
deaths_diff_2013_1999 <- deaths_2013 <- deaths_2013 %>% select(CAUSE_NAME, Diff)
print(deaths_diff_2013_1999)
deaths_1999 <- deaths_filtered %>% filter(YEAR == '1999') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_1999)
deaths_2013 <- deaths_filtered %>% filter(YEAR == '2013') %>% select(YEAR, CAUSE_NAME, DEATHS)
print(deaths_2013)
deaths_diff_2013_1999 <- deaths_2013 <- deaths_2013 %>% select(CAUSE_NAME, Diff)
print(deaths_diff_2013_1999)
max_death_cause_growth <- deaths_diff_2013_1999 %>% filter(Diff == max(Diff))
print(max_death_cause_growth)
min_death_cause_growth <- deaths_diff_2013_1999 %>% filter(Diff == min(Diff))
print(min_death_cause_growth)
print deaths_filtered
print(deaths_filtered)
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
install.packages("dplyr")
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')
shiny::runApp('GitHub/final-project-INFO498F')

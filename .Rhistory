shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
}
data('iris')
View(iris)
shiny::runApp()
shiny::runApp()
shiny::runApp()
colors
shiny::runApp()
color_choice
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github('rstudio/rsconnect')
rsconnect::setAccountInfo(name='epahang',
token='CF7638B8DACF615BEDAADD1D068CC227',
secret='Tkz60QK+o8B0Epk39YtCyZOARjc+CUxjbdYMKsez')
library(rsconnect)
rsconnect::deployApp('~/Documents/INFO498F/a8-building-applications')
shiny::runApp()
shiny::runApp()
rsconnect::deployApp('~/Documents/INFO498F/a8-building-applications')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
p <- plot_ly(economics, x = date, y = uempmed, name = "unemployment")
p %>% add_trace(y = fitted(loess(uempmed ~ as.numeric(date))))
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
View(top_deaths)
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(DEATHS ~ as.numeric(date))))
}
make_line_plot(top_deaths, stroke)
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(DEATHS ~ as.numeric(date))))
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(DEATHS ~ as.numeric(YEAR))))
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(DEATHS ~ YEAR)))
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))),)
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(data = df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths", mode = "markers")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(data = df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths", mode = "markers")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(data = df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause) {
df_filtered <- filter(df, CAUSE_NAME == cause)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths")
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, width = 825, height = 525)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths from 1999-2013 in ", location, " due to ", cause)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, width = 825, height = 525)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths from 1999-2013 in ", location, " due to ", toLower(cause))
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, width = 825, height = 525)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths from 1999-2013 in ", location, " due to ", tolower(cause))
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, width = 825, height = 525)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths from 1999-2013 in ", location, " due to ", tolower(cause))
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, width = 825, height = 525)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths from 1999-2013 in ", location, " due to ", tolower(cause))
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
#p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
p %>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
#return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
%>% add_trace(y = fitted(loess(as.numeric(DEATHS) ~ as.numeric(YEAR))))
#return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
# Creates a function that returns a line plot of given data
library(plotly)
library(dplyr)
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
return(p)
}
make_line_plot(top_deaths, 'Cancer', 'United States')
CAUSE_NAME
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
dplyr::filter(DEATHS == max(DEATHS)) %>%
layout(title = title_plot, annotations = list(x = YEAR, y = DEATHS, text = "Peak", showarrow = T))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
dplyr::filter(DEATHS == max(as.numeric(DEATHS))) %>%
layout(title = title_plot, annotations = list(x = YEAR, y = DEATHS, text = "Peak", showarrow = T))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
dplyr::filter(MAX_DEATHS == max(as.numeric(DEATHS))) %>%
layout(title = title_plot, annotations = list(x = YEAR, y = MAX_DEATHS, text = "Peak", showarrow = T))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
max_deaths <- filter(df, DEATHS == max(DEATHS))
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, annotations = list(x = YEAR, y = max_deaths, text = "Peak", showarrow = T))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
max_deaths <- filter(df, DEATHS == max(as.numeric(DEATHS)))
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot, annotations = list(x = YEAR, y = max_deaths, text = "Peak", showarrow = T))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot) %>%
add_trace(y = fitted(loess(DEATHS ~ as.numeric(YEAR))))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot) %>%
add_trace(y = fitted(loess(DEATHS ~ YEAR)))
return(p)
}
make_line_plot(top_deaths, 'Stroke', 'United States')
# Creates a function that returns a line plot of given data
# setwd('~/Documents/INFO498F/final-project-INFO498F')
top_deaths <- read.csv('data/Top_Ten_US_Causes_Of_Death.csv')
make_line_plot <- function(df, cause, location) {
title_plot <- paste0("Number of Deaths by ", cause, " from 1999-2013 in ", location)
df_filtered <- filter(df, CAUSE_NAME == cause, STATE == location)
p <- plot_ly(df_filtered, x = YEAR, y = DEATHS, name = "Number of Deaths") %>%
layout(title = title_plot)
return(p)
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("rpart")
# One of many libraries for classification / ML
library(rpart)
# Read in data
homes <- read.csv('part_1_data.csv')
# Use rpart to fit a model: predict `in_sf` using all variables
basic_fit <- rpart(in_sf ~ ., data = homes, method="class")
shiny::runApp()
shiny::runApp()
